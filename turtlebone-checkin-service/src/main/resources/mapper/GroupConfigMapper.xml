<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.turtlebone.checkin.repository.GroupConfigRepository" >
  <resultMap id="BaseResultMap" type="com.turtlebone.checkin.entity.GroupConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="parentId" property="parentid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="app" property="app" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="FavResultMap" type="com.turtlebone.checkin.model.FavCheckinModel" >
    <result column="username" property="name" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="dateTime" property="dateTime" jdbcType="VARCHAR" />
  </resultMap>

 <sql id="Base_Column_List" >
   `id`,
   `parentId`,
   `name`,
   `type`,
   `app`
 </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from groupconfig
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from groupconfig
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.turtlebone.checkin.entity.GroupConfig" >
    insert into groupconfig ( 
     `id`,
     `parentId`,
     `name`,
     `type`,
     `app`
    )
    values (
     #{id,jdbcType=INTEGER},
     #{parentid,jdbcType=INTEGER},
     #{name,jdbcType=VARCHAR},
     #{type,jdbcType=VARCHAR},
     #{app,jdbcType=INTEGER}
 )
  </insert>
  
  
  
  <insert id="insertSelective" parameterType="com.turtlebone.checkin.entity.GroupConfig" >
    insert into groupconfig
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        `id`,
      </if>
      <if test="parentid != null" >
        `parentId`,
      </if>
      <if test="name != null" >
        `name`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="app != null" >
        `app`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="app != null" >
        #{app,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.turtlebone.checkin.entity.GroupConfig" >
    update groupconfig
	  <set>
       <if test="parentid != null" >
        `parentId`= #{parentid,jdbcType=INTEGER},
       </if>
       <if test="name != null" >
        `name`= #{name,jdbcType=VARCHAR},
       </if>
       <if test="type != null" >
        `type`= #{type,jdbcType=VARCHAR},
       </if>
       <if test="app != null" >
        `app`= #{app,jdbcType=INTEGER},
       </if>
          </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.turtlebone.checkin.entity.GroupConfig" >
    update groupconfig
    set 
       `parentId` = #{parentid,jdbcType=INTEGER},
       `name` = #{name,jdbcType=VARCHAR},
       `type` = #{type,jdbcType=VARCHAR},
       `app` = #{app,jdbcType=INTEGER}
     where id = #{id,jdbcType=INTEGER}
  </update>
  

  
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.turtlebone.checkin.entity.GroupConfig" >
    select count(*) from groupconfig
    <where >
            <if test="id != null" >
        and `id` = #{id,jdbcType=INTEGER}
      </if>
            <if test="parentid != null" >
        and `parentId` = #{parentid,jdbcType=INTEGER}
      </if>
            <if test="name != null" >
        and `name` = #{name,jdbcType=VARCHAR}
      </if>
            <if test="type != null" >
        and `type` = #{type,jdbcType=VARCHAR}
      </if>
            <if test="app != null" >
        and `app` = #{app,jdbcType=INTEGER}
      </if>
          </where>
  </select>

    <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from groupconfig where 1 = 1 
        <if test="groupConfig.id != null" >
      and `id` = #{groupConfig.id,jdbcType=INTEGER}
    </if>
        <if test="groupConfig.parentid != null" >
      and `parentId` = #{groupConfig.parentid,jdbcType=INTEGER}
    </if>
        <if test="groupConfig.name != null" >
      and `name` = #{groupConfig.name,jdbcType=VARCHAR}
    </if>
        <if test="groupConfig.type != null" >
      and `type` = #{groupConfig.type,jdbcType=VARCHAR}
    </if>
        <if test="groupConfig.app != null" >
      and `app` = #{groupConfig.app,jdbcType=INTEGER}
    </if>
        <if test="pageable.sort != null" >
      order by 
      <foreach collection="pageable.sort" item="order" separator="," >
        <if test="
   order.property == 'id' 
   || order.property == 'parentId'
   || order.property == 'name'
   || order.property == 'type'
   || order.property == 'app'
        " >
        		${order.property} ${order.direction}
        </if>
      </foreach>
    </if>
    <if test="pageable.offset >= 0 and pageable.pageSize > 0" >
      limit ${pageable.offset}, ${pageable.pageSize}
    </if>
  </select>
  
  <select id="queryFav" parameterType="java.util.Map" resultMap="FavResultMap">
  	SELECT username, g.name, g.type, max(datetime) as 'dateTime', count(username) as 'count'
  		 FROM turtle.activity a left join groupconfig g 
  		 	on g.type=a.strresult2 
  	where a.type='CHECKIN' and (username = #{username} or username = 'FLJ')
	and g.type is not null
	group by g.type;
  </select>
 </mapper>
  

  
	